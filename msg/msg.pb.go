// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package msg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IDRequest struct {
	Query                int32    `protobuf:"varint,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDRequest) Reset()         { *m = IDRequest{} }
func (m *IDRequest) String() string { return proto.CompactTextString(m) }
func (*IDRequest) ProtoMessage()    {}
func (*IDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{0}
}

func (m *IDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDRequest.Unmarshal(m, b)
}
func (m *IDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDRequest.Marshal(b, m, deterministic)
}
func (m *IDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDRequest.Merge(m, src)
}
func (m *IDRequest) XXX_Size() int {
	return xxx_messageInfo_IDRequest.Size(m)
}
func (m *IDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IDRequest proto.InternalMessageInfo

func (m *IDRequest) GetQuery() int32 {
	if m != nil {
		return m.Query
	}
	return 0
}

type IP4Request struct {
	Query                uint32   `protobuf:"varint,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP4Request) Reset()         { *m = IP4Request{} }
func (m *IP4Request) String() string { return proto.CompactTextString(m) }
func (*IP4Request) ProtoMessage()    {}
func (*IP4Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{1}
}

func (m *IP4Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP4Request.Unmarshal(m, b)
}
func (m *IP4Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP4Request.Marshal(b, m, deterministic)
}
func (m *IP4Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP4Request.Merge(m, src)
}
func (m *IP4Request) XXX_Size() int {
	return xxx_messageInfo_IP4Request.Size(m)
}
func (m *IP4Request) XXX_DiscardUnknown() {
	xxx_messageInfo_IP4Request.DiscardUnknown(m)
}

var xxx_messageInfo_IP4Request proto.InternalMessageInfo

func (m *IP4Request) GetQuery() uint32 {
	if m != nil {
		return m.Query
	}
	return 0
}

type IP6Request struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP6Request) Reset()         { *m = IP6Request{} }
func (m *IP6Request) String() string { return proto.CompactTextString(m) }
func (*IP6Request) ProtoMessage()    {}
func (*IP6Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{2}
}

func (m *IP6Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP6Request.Unmarshal(m, b)
}
func (m *IP6Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP6Request.Marshal(b, m, deterministic)
}
func (m *IP6Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP6Request.Merge(m, src)
}
func (m *IP6Request) XXX_Size() int {
	return xxx_messageInfo_IP6Request.Size(m)
}
func (m *IP6Request) XXX_DiscardUnknown() {
	xxx_messageInfo_IP6Request.DiscardUnknown(m)
}

var xxx_messageInfo_IP6Request proto.InternalMessageInfo

func (m *IP6Request) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type URLRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLRequest) Reset()         { *m = URLRequest{} }
func (m *URLRequest) String() string { return proto.CompactTextString(m) }
func (*URLRequest) ProtoMessage()    {}
func (*URLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{3}
}

func (m *URLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLRequest.Unmarshal(m, b)
}
func (m *URLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLRequest.Marshal(b, m, deterministic)
}
func (m *URLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLRequest.Merge(m, src)
}
func (m *URLRequest) XXX_Size() int {
	return xxx_messageInfo_URLRequest.Size(m)
}
func (m *URLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLRequest proto.InternalMessageInfo

func (m *URLRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type DomainRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainRequest) Reset()         { *m = DomainRequest{} }
func (m *DomainRequest) String() string { return proto.CompactTextString(m) }
func (*DomainRequest) ProtoMessage()    {}
func (*DomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{4}
}

func (m *DomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainRequest.Unmarshal(m, b)
}
func (m *DomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainRequest.Marshal(b, m, deterministic)
}
func (m *DomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainRequest.Merge(m, src)
}
func (m *DomainRequest) XXX_Size() int {
	return xxx_messageInfo_DomainRequest.Size(m)
}
func (m *DomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainRequest proto.InternalMessageInfo

func (m *DomainRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	Error                string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Results              []*Content `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{5}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SearchResponse) GetResults() []*Content {
	if m != nil {
		return m.Results
	}
	return nil
}

type Content struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EntryType            int32          `protobuf:"varint,2,opt,name=entryType,proto3" json:"entryType,omitempty"`
	HttpsBlock           int32          `protobuf:"varint,3,opt,name=httpsBlock,proto3" json:"httpsBlock,omitempty"`
	RegistryUpdateTime   int64          `protobuf:"varint,4,opt,name=registryUpdateTime,proto3" json:"registryUpdateTime,omitempty"`
	Decision             *Decision      `protobuf:"bytes,5,opt,name=decision,proto3" json:"decision,omitempty"`
	IncludeTime          int64          `protobuf:"varint,6,opt,name=includeTime,proto3" json:"includeTime,omitempty"`
	UrgencyType          int32          `protobuf:"varint,7,opt,name=urgencyType,proto3" json:"urgencyType,omitempty"`
	BlockType            string         `protobuf:"bytes,8,opt,name=blockType,proto3" json:"blockType,omitempty"`
	Hash                 string         `protobuf:"bytes,9,opt,name=hash,proto3" json:"hash,omitempty"`
	Ts                   int64          `protobuf:"varint,10,opt,name=ts,proto3" json:"ts,omitempty"`
	U2Hash               uint32         `protobuf:"varint,11,opt,name=u2Hash,proto3" json:"u2Hash,omitempty"`
	Url                  []*URL         `protobuf:"bytes,12,rep,name=url,proto3" json:"url,omitempty"`
	Ip4                  []*IPv4Address `protobuf:"bytes,13,rep,name=ip4,proto3" json:"ip4,omitempty"`
	Ip6                  []*IPv6Address `protobuf:"bytes,14,rep,name=ip6,proto3" json:"ip6,omitempty"`
	Subnet               []*Subnet      `protobuf:"bytes,15,rep,name=subnet,proto3" json:"subnet,omitempty"`
	Subnet6              []*Subnet6     `protobuf:"bytes,16,rep,name=subnet6,proto3" json:"subnet6,omitempty"`
	Domain               []*Domain      `protobuf:"bytes,17,rep,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{6}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Content) GetEntryType() int32 {
	if m != nil {
		return m.EntryType
	}
	return 0
}

func (m *Content) GetHttpsBlock() int32 {
	if m != nil {
		return m.HttpsBlock
	}
	return 0
}

func (m *Content) GetRegistryUpdateTime() int64 {
	if m != nil {
		return m.RegistryUpdateTime
	}
	return 0
}

func (m *Content) GetDecision() *Decision {
	if m != nil {
		return m.Decision
	}
	return nil
}

func (m *Content) GetIncludeTime() int64 {
	if m != nil {
		return m.IncludeTime
	}
	return 0
}

func (m *Content) GetUrgencyType() int32 {
	if m != nil {
		return m.UrgencyType
	}
	return 0
}

func (m *Content) GetBlockType() string {
	if m != nil {
		return m.BlockType
	}
	return ""
}

func (m *Content) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Content) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Content) GetU2Hash() uint32 {
	if m != nil {
		return m.U2Hash
	}
	return 0
}

func (m *Content) GetUrl() []*URL {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Content) GetIp4() []*IPv4Address {
	if m != nil {
		return m.Ip4
	}
	return nil
}

func (m *Content) GetIp6() []*IPv6Address {
	if m != nil {
		return m.Ip6
	}
	return nil
}

func (m *Content) GetSubnet() []*Subnet {
	if m != nil {
		return m.Subnet
	}
	return nil
}

func (m *Content) GetSubnet6() []*Subnet6 {
	if m != nil {
		return m.Subnet6
	}
	return nil
}

func (m *Content) GetDomain() []*Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

type Decision struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Number               string   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Org                  string   `protobuf:"bytes,3,opt,name=org,proto3" json:"org,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Decision) Reset()         { *m = Decision{} }
func (m *Decision) String() string { return proto.CompactTextString(m) }
func (*Decision) ProtoMessage()    {}
func (*Decision) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{7}
}

func (m *Decision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decision.Unmarshal(m, b)
}
func (m *Decision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decision.Marshal(b, m, deterministic)
}
func (m *Decision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decision.Merge(m, src)
}
func (m *Decision) XXX_Size() int {
	return xxx_messageInfo_Decision.Size(m)
}
func (m *Decision) XXX_DiscardUnknown() {
	xxx_messageInfo_Decision.DiscardUnknown(m)
}

var xxx_messageInfo_Decision proto.InternalMessageInfo

func (m *Decision) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Decision) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Decision) GetOrg() string {
	if m != nil {
		return m.Org
	}
	return ""
}

type IPv4Address struct {
	Ip4                  uint32   `protobuf:"varint,1,opt,name=ip4,proto3" json:"ip4,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPv4Address) Reset()         { *m = IPv4Address{} }
func (m *IPv4Address) String() string { return proto.CompactTextString(m) }
func (*IPv4Address) ProtoMessage()    {}
func (*IPv4Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{8}
}

func (m *IPv4Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPv4Address.Unmarshal(m, b)
}
func (m *IPv4Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPv4Address.Marshal(b, m, deterministic)
}
func (m *IPv4Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPv4Address.Merge(m, src)
}
func (m *IPv4Address) XXX_Size() int {
	return xxx_messageInfo_IPv4Address.Size(m)
}
func (m *IPv4Address) XXX_DiscardUnknown() {
	xxx_messageInfo_IPv4Address.DiscardUnknown(m)
}

var xxx_messageInfo_IPv4Address proto.InternalMessageInfo

func (m *IPv4Address) GetIp4() uint32 {
	if m != nil {
		return m.Ip4
	}
	return 0
}

func (m *IPv4Address) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type IPv6Address struct {
	Ip6                  string   `protobuf:"bytes,1,opt,name=ip6,proto3" json:"ip6,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPv6Address) Reset()         { *m = IPv6Address{} }
func (m *IPv6Address) String() string { return proto.CompactTextString(m) }
func (*IPv6Address) ProtoMessage()    {}
func (*IPv6Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{9}
}

func (m *IPv6Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPv6Address.Unmarshal(m, b)
}
func (m *IPv6Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPv6Address.Marshal(b, m, deterministic)
}
func (m *IPv6Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPv6Address.Merge(m, src)
}
func (m *IPv6Address) XXX_Size() int {
	return xxx_messageInfo_IPv6Address.Size(m)
}
func (m *IPv6Address) XXX_DiscardUnknown() {
	xxx_messageInfo_IPv6Address.DiscardUnknown(m)
}

var xxx_messageInfo_IPv6Address proto.InternalMessageInfo

func (m *IPv6Address) GetIp6() string {
	if m != nil {
		return m.Ip6
	}
	return ""
}

func (m *IPv6Address) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type Subnet struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subnet) Reset()         { *m = Subnet{} }
func (m *Subnet) String() string { return proto.CompactTextString(m) }
func (*Subnet) ProtoMessage()    {}
func (*Subnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{10}
}

func (m *Subnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet.Unmarshal(m, b)
}
func (m *Subnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet.Marshal(b, m, deterministic)
}
func (m *Subnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet.Merge(m, src)
}
func (m *Subnet) XXX_Size() int {
	return xxx_messageInfo_Subnet.Size(m)
}
func (m *Subnet) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet proto.InternalMessageInfo

func (m *Subnet) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *Subnet) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type Subnet6 struct {
	Subnet6              string   `protobuf:"bytes,1,opt,name=subnet6,proto3" json:"subnet6,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subnet6) Reset()         { *m = Subnet6{} }
func (m *Subnet6) String() string { return proto.CompactTextString(m) }
func (*Subnet6) ProtoMessage()    {}
func (*Subnet6) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{11}
}

func (m *Subnet6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet6.Unmarshal(m, b)
}
func (m *Subnet6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet6.Marshal(b, m, deterministic)
}
func (m *Subnet6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet6.Merge(m, src)
}
func (m *Subnet6) XXX_Size() int {
	return xxx_messageInfo_Subnet6.Size(m)
}
func (m *Subnet6) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet6.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet6 proto.InternalMessageInfo

func (m *Subnet6) GetSubnet6() string {
	if m != nil {
		return m.Subnet6
	}
	return ""
}

func (m *Subnet6) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type URL struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URL) Reset()         { *m = URL{} }
func (m *URL) String() string { return proto.CompactTextString(m) }
func (*URL) ProtoMessage()    {}
func (*URL) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{12}
}

func (m *URL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URL.Unmarshal(m, b)
}
func (m *URL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URL.Marshal(b, m, deterministic)
}
func (m *URL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URL.Merge(m, src)
}
func (m *URL) XXX_Size() int {
	return xxx_messageInfo_URL.Size(m)
}
func (m *URL) XXX_DiscardUnknown() {
	xxx_messageInfo_URL.DiscardUnknown(m)
}

var xxx_messageInfo_URL proto.InternalMessageInfo

func (m *URL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URL) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type Domain struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Domain) Reset()         { *m = Domain{} }
func (m *Domain) String() string { return proto.CompactTextString(m) }
func (*Domain) ProtoMessage()    {}
func (*Domain) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{13}
}

func (m *Domain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Domain.Unmarshal(m, b)
}
func (m *Domain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Domain.Marshal(b, m, deterministic)
}
func (m *Domain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Domain.Merge(m, src)
}
func (m *Domain) XXX_Size() int {
	return xxx_messageInfo_Domain.Size(m)
}
func (m *Domain) XXX_DiscardUnknown() {
	xxx_messageInfo_Domain.DiscardUnknown(m)
}

var xxx_messageInfo_Domain proto.InternalMessageInfo

func (m *Domain) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Domain) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func init() {
	proto.RegisterType((*IDRequest)(nil), "IDRequest")
	proto.RegisterType((*IP4Request)(nil), "IP4Request")
	proto.RegisterType((*IP6Request)(nil), "IP6Request")
	proto.RegisterType((*URLRequest)(nil), "URLRequest")
	proto.RegisterType((*DomainRequest)(nil), "DomainRequest")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
	proto.RegisterType((*Content)(nil), "Content")
	proto.RegisterType((*Decision)(nil), "Decision")
	proto.RegisterType((*IPv4Address)(nil), "IPv4Address")
	proto.RegisterType((*IPv6Address)(nil), "IPv6Address")
	proto.RegisterType((*Subnet)(nil), "Subnet")
	proto.RegisterType((*Subnet6)(nil), "Subnet6")
	proto.RegisterType((*URL)(nil), "URL")
	proto.RegisterType((*Domain)(nil), "Domain")
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor_c06e4cca6c2cc899) }

var fileDescriptor_c06e4cca6c2cc899 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdb, 0x6e, 0xda, 0x40,
	0x10, 0x15, 0x36, 0x37, 0x8f, 0x13, 0x92, 0xae, 0xaa, 0x68, 0x55, 0x55, 0x29, 0xb5, 0x14, 0x85,
	0xbe, 0x6c, 0x2a, 0x82, 0xfc, 0xde, 0x86, 0x87, 0x50, 0xe5, 0x01, 0x6d, 0xc2, 0x07, 0x80, 0xbd,
	0x02, 0x2b, 0x60, 0x3b, 0xbb, 0xeb, 0x4a, 0xfc, 0x42, 0x3f, 0xb3, 0x5f, 0x52, 0xed, 0xc5, 0xd8,
	0x10, 0x44, 0xdf, 0x76, 0xce, 0x39, 0xb3, 0x9e, 0x39, 0x33, 0x5e, 0xf0, 0x36, 0x62, 0x49, 0x72,
	0x9e, 0xc9, 0x2c, 0xf8, 0x0a, 0xde, 0x64, 0x4c, 0xd9, 0x5b, 0xc1, 0x84, 0x44, 0x1f, 0xa1, 0xf5,
	0x56, 0x30, 0xbe, 0xc5, 0x8d, 0x7e, 0x63, 0xd0, 0xa2, 0x26, 0x08, 0x02, 0x80, 0xc9, 0x74, 0x74,
	0x54, 0x73, 0xbe, 0xa7, 0x09, 0x8f, 0x6a, 0xbc, 0x9a, 0x66, 0x46, 0x9f, 0x4e, 0x6b, 0x6e, 0xe0,
	0x7c, 0x9c, 0x6d, 0xe6, 0x49, 0x7a, 0x5a, 0xf6, 0x0b, 0x7a, 0xcf, 0x6c, 0xce, 0xa3, 0x15, 0x65,
	0x22, 0xcf, 0x52, 0xc1, 0x94, 0x8e, 0x71, 0x9e, 0xf1, 0x52, 0xa7, 0x03, 0x14, 0x40, 0x87, 0x33,
	0x51, 0xac, 0xa5, 0xc0, 0x4e, 0xdf, 0x1d, 0xf8, 0xc3, 0x2e, 0x79, 0xc8, 0x52, 0xc9, 0x52, 0x49,
	0x4b, 0x22, 0xf8, 0xd3, 0x84, 0x8e, 0x05, 0x51, 0x0f, 0x9c, 0x24, 0xb6, 0xdd, 0x3b, 0x49, 0x8c,
	0x3e, 0x83, 0xc7, 0x52, 0xc9, 0xb7, 0x2f, 0xdb, 0x9c, 0x61, 0x47, 0xc3, 0x15, 0x80, 0xae, 0x01,
	0x56, 0x52, 0xe6, 0xe2, 0xe7, 0x3a, 0x8b, 0x5e, 0xb1, 0xab, 0xe9, 0x1a, 0x82, 0x08, 0x20, 0xce,
	0x96, 0x89, 0x90, 0x7c, 0x3b, 0xcb, 0xe3, 0xb9, 0x64, 0x2f, 0xc9, 0x86, 0xe1, 0x66, 0xbf, 0x31,
	0x70, 0xe9, 0x11, 0x06, 0xdd, 0x40, 0x37, 0x66, 0x51, 0x22, 0x92, 0x2c, 0xc5, 0xad, 0x7e, 0x63,
	0xe0, 0x0f, 0x3d, 0x32, 0xb6, 0x00, 0xdd, 0x51, 0xa8, 0x0f, 0x7e, 0x92, 0x46, 0xeb, 0x22, 0x36,
	0xf7, 0xb5, 0xf5, 0x7d, 0x75, 0x48, 0x29, 0x0a, 0xbe, 0x64, 0x69, 0x64, 0x0a, 0xef, 0xe8, 0xca,
	0xea, 0x90, 0x6a, 0x6c, 0xa1, 0x6a, 0xd4, 0x7c, 0x57, 0x5b, 0x56, 0x01, 0x08, 0x41, 0x73, 0x35,
	0x17, 0x2b, 0xec, 0x69, 0x42, 0x9f, 0x95, 0x35, 0x52, 0x60, 0xd0, 0x1f, 0x73, 0xa4, 0x40, 0x57,
	0xd0, 0x2e, 0x86, 0x8f, 0x4a, 0xe5, 0xeb, 0x45, 0xb0, 0x11, 0xba, 0x02, 0xb7, 0xe0, 0x6b, 0x7c,
	0xa6, 0xed, 0x6e, 0x12, 0x35, 0x71, 0x05, 0xa0, 0x6b, 0x70, 0x93, 0x7c, 0x84, 0xcf, 0x35, 0x7e,
	0x46, 0x26, 0xd3, 0xdf, 0xa3, 0x1f, 0x71, 0xcc, 0x99, 0x10, 0x54, 0x11, 0x86, 0x0f, 0x71, 0xaf,
	0xe2, 0xc3, 0x1a, 0x1f, 0xa2, 0x2f, 0xd0, 0x16, 0xc5, 0x22, 0x65, 0x12, 0x5f, 0x68, 0x49, 0x87,
	0x3c, 0xeb, 0x90, 0x5a, 0x58, 0xcd, 0xda, 0x9c, 0x42, 0x7c, 0x69, 0x67, 0x6d, 0x14, 0x21, 0x2d,
	0x09, 0x75, 0x49, 0xac, 0xd7, 0x0b, 0x7f, 0xb0, 0x97, 0xd8, 0x6d, 0xb3, 0x70, 0xf0, 0x08, 0xdd,
	0xd2, 0x71, 0xe5, 0x82, 0x1a, 0x8d, 0xdd, 0x28, 0x7d, 0x56, 0x5d, 0xa7, 0xc5, 0x66, 0xc1, 0xb8,
	0xde, 0x06, 0x8f, 0xda, 0x08, 0x5d, 0x82, 0x9b, 0xf1, 0xa5, 0xde, 0x01, 0x8f, 0xaa, 0x63, 0x70,
	0x07, 0x7e, 0xad, 0x47, 0x25, 0x50, 0xed, 0x9b, 0x9f, 0x46, 0x37, 0x6c, 0x0c, 0x75, 0x4a, 0x43,
	0x6d, 0x42, 0xb8, 0x97, 0x10, 0xda, 0x8f, 0x6b, 0x07, 0x0e, 0x13, 0xbe, 0x43, 0xdb, 0x34, 0xa8,
	0xaa, 0xb2, 0xde, 0x18, 0x79, 0x69, 0xc9, 0x61, 0xc6, 0x3d, 0x74, 0xac, 0x25, 0x08, 0x57, 0x6e,
	0x99, 0x9c, 0x9d, 0x47, 0x87, 0x49, 0xb7, 0xe0, 0xce, 0xe8, 0x93, 0xaa, 0x47, 0xcd, 0xd5, 0xd6,
	0xa3, 0x26, 0x7a, 0xa4, 0x1e, 0xe3, 0xa6, 0xaa, 0xc7, 0xda, 0x6c, 0xeb, 0x31, 0xd1, 0x61, 0xc6,
	0xf0, 0x6f, 0x03, 0x5a, 0x0f, 0x2b, 0x16, 0xbd, 0xa2, 0x5b, 0xe8, 0x9a, 0x1f, 0x7a, 0x32, 0x46,
	0x40, 0x76, 0x2f, 0xd2, 0xa7, 0x0b, 0x72, 0xf0, 0x9f, 0x7f, 0x03, 0xcf, 0x0a, 0xa7, 0x23, 0xe4,
	0x93, 0xea, 0x61, 0x3a, 0x29, 0x0d, 0xb5, 0x34, 0xfc, 0xbf, 0x54, 0x75, 0xea, 0x93, 0xea, 0x99,
	0x7a, 0x2f, 0xbd, 0x83, 0x33, 0x83, 0xd8, 0x5e, 0x7b, 0x64, 0xef, 0xc1, 0x7a, 0x97, 0xb0, 0x68,
	0xeb, 0x87, 0xf6, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0x81, 0xbc, 0xcb, 0x75, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckClient is the client API for Check service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckClient interface {
	SearchID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchIP4(ctx context.Context, in *IP4Request, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchIP6(ctx context.Context, in *IP6Request, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchURL(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchDomain(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type checkClient struct {
	cc *grpc.ClientConn
}

func NewCheckClient(cc *grpc.ClientConn) CheckClient {
	return &checkClient{cc}
}

func (c *checkClient) SearchID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchIP4(ctx context.Context, in *IP4Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchIP4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchIP6(ctx context.Context, in *IP6Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchIP6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchURL(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchDomain(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckServer is the server API for Check service.
type CheckServer interface {
	SearchID(context.Context, *IDRequest) (*SearchResponse, error)
	SearchIP4(context.Context, *IP4Request) (*SearchResponse, error)
	SearchIP6(context.Context, *IP6Request) (*SearchResponse, error)
	SearchURL(context.Context, *URLRequest) (*SearchResponse, error)
	SearchDomain(context.Context, *DomainRequest) (*SearchResponse, error)
}

// UnimplementedCheckServer can be embedded to have forward compatible implementations.
type UnimplementedCheckServer struct {
}

func (*UnimplementedCheckServer) SearchID(ctx context.Context, req *IDRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchID not implemented")
}
func (*UnimplementedCheckServer) SearchIP4(ctx context.Context, req *IP4Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIP4 not implemented")
}
func (*UnimplementedCheckServer) SearchIP6(ctx context.Context, req *IP6Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIP6 not implemented")
}
func (*UnimplementedCheckServer) SearchURL(ctx context.Context, req *URLRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchURL not implemented")
}
func (*UnimplementedCheckServer) SearchDomain(ctx context.Context, req *DomainRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDomain not implemented")
}

func RegisterCheckServer(s *grpc.Server, srv CheckServer) {
	s.RegisterService(&_Check_serviceDesc, srv)
}

func _Check_SearchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchID(ctx, req.(*IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchIP4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IP4Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchIP4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchIP4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchIP4(ctx, req.(*IP4Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchIP6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IP6Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchIP6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchIP6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchIP6(ctx, req.(*IP6Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchURL(ctx, req.(*URLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchDomain(ctx, req.(*DomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Check_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Check",
	HandlerType: (*CheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchID",
			Handler:    _Check_SearchID_Handler,
		},
		{
			MethodName: "SearchIP4",
			Handler:    _Check_SearchIP4_Handler,
		},
		{
			MethodName: "SearchIP6",
			Handler:    _Check_SearchIP6_Handler,
		},
		{
			MethodName: "SearchURL",
			Handler:    _Check_SearchURL_Handler,
		},
		{
			MethodName: "SearchDomain",
			Handler:    _Check_SearchDomain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg.proto",
}
