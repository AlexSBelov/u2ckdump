// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package msg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IDRequest struct {
	Query                int32    `protobuf:"varint,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDRequest) Reset()         { *m = IDRequest{} }
func (m *IDRequest) String() string { return proto.CompactTextString(m) }
func (*IDRequest) ProtoMessage()    {}
func (*IDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{0}
}

func (m *IDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDRequest.Unmarshal(m, b)
}
func (m *IDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDRequest.Marshal(b, m, deterministic)
}
func (m *IDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDRequest.Merge(m, src)
}
func (m *IDRequest) XXX_Size() int {
	return xxx_messageInfo_IDRequest.Size(m)
}
func (m *IDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IDRequest proto.InternalMessageInfo

func (m *IDRequest) GetQuery() int32 {
	if m != nil {
		return m.Query
	}
	return 0
}

type IP4Request struct {
	Query                uint32   `protobuf:"varint,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP4Request) Reset()         { *m = IP4Request{} }
func (m *IP4Request) String() string { return proto.CompactTextString(m) }
func (*IP4Request) ProtoMessage()    {}
func (*IP4Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{1}
}

func (m *IP4Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP4Request.Unmarshal(m, b)
}
func (m *IP4Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP4Request.Marshal(b, m, deterministic)
}
func (m *IP4Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP4Request.Merge(m, src)
}
func (m *IP4Request) XXX_Size() int {
	return xxx_messageInfo_IP4Request.Size(m)
}
func (m *IP4Request) XXX_DiscardUnknown() {
	xxx_messageInfo_IP4Request.DiscardUnknown(m)
}

var xxx_messageInfo_IP4Request proto.InternalMessageInfo

func (m *IP4Request) GetQuery() uint32 {
	if m != nil {
		return m.Query
	}
	return 0
}

type IP6Request struct {
	Query                []byte   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP6Request) Reset()         { *m = IP6Request{} }
func (m *IP6Request) String() string { return proto.CompactTextString(m) }
func (*IP6Request) ProtoMessage()    {}
func (*IP6Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{2}
}

func (m *IP6Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP6Request.Unmarshal(m, b)
}
func (m *IP6Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP6Request.Marshal(b, m, deterministic)
}
func (m *IP6Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP6Request.Merge(m, src)
}
func (m *IP6Request) XXX_Size() int {
	return xxx_messageInfo_IP6Request.Size(m)
}
func (m *IP6Request) XXX_DiscardUnknown() {
	xxx_messageInfo_IP6Request.DiscardUnknown(m)
}

var xxx_messageInfo_IP6Request proto.InternalMessageInfo

func (m *IP6Request) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type URLRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLRequest) Reset()         { *m = URLRequest{} }
func (m *URLRequest) String() string { return proto.CompactTextString(m) }
func (*URLRequest) ProtoMessage()    {}
func (*URLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{3}
}

func (m *URLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLRequest.Unmarshal(m, b)
}
func (m *URLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLRequest.Marshal(b, m, deterministic)
}
func (m *URLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLRequest.Merge(m, src)
}
func (m *URLRequest) XXX_Size() int {
	return xxx_messageInfo_URLRequest.Size(m)
}
func (m *URLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLRequest proto.InternalMessageInfo

func (m *URLRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type DomainRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainRequest) Reset()         { *m = DomainRequest{} }
func (m *DomainRequest) String() string { return proto.CompactTextString(m) }
func (*DomainRequest) ProtoMessage()    {}
func (*DomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{4}
}

func (m *DomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainRequest.Unmarshal(m, b)
}
func (m *DomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainRequest.Marshal(b, m, deterministic)
}
func (m *DomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainRequest.Merge(m, src)
}
func (m *DomainRequest) XXX_Size() int {
	return xxx_messageInfo_DomainRequest.Size(m)
}
func (m *DomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainRequest proto.InternalMessageInfo

func (m *DomainRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type DecisionRequest struct {
	Query                uint64   `protobuf:"varint,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecisionRequest) Reset()         { *m = DecisionRequest{} }
func (m *DecisionRequest) String() string { return proto.CompactTextString(m) }
func (*DecisionRequest) ProtoMessage()    {}
func (*DecisionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{5}
}

func (m *DecisionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecisionRequest.Unmarshal(m, b)
}
func (m *DecisionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecisionRequest.Marshal(b, m, deterministic)
}
func (m *DecisionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecisionRequest.Merge(m, src)
}
func (m *DecisionRequest) XXX_Size() int {
	return xxx_messageInfo_DecisionRequest.Size(m)
}
func (m *DecisionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecisionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecisionRequest proto.InternalMessageInfo

func (m *DecisionRequest) GetQuery() uint64 {
	if m != nil {
		return m.Query
	}
	return 0
}

type TextDecisionRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextDecisionRequest) Reset()         { *m = TextDecisionRequest{} }
func (m *TextDecisionRequest) String() string { return proto.CompactTextString(m) }
func (*TextDecisionRequest) ProtoMessage()    {}
func (*TextDecisionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{6}
}

func (m *TextDecisionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextDecisionRequest.Unmarshal(m, b)
}
func (m *TextDecisionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextDecisionRequest.Marshal(b, m, deterministic)
}
func (m *TextDecisionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextDecisionRequest.Merge(m, src)
}
func (m *TextDecisionRequest) XXX_Size() int {
	return xxx_messageInfo_TextDecisionRequest.Size(m)
}
func (m *TextDecisionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextDecisionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextDecisionRequest proto.InternalMessageInfo

func (m *TextDecisionRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Subnet4Request struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subnet4Request) Reset()         { *m = Subnet4Request{} }
func (m *Subnet4Request) String() string { return proto.CompactTextString(m) }
func (*Subnet4Request) ProtoMessage()    {}
func (*Subnet4Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{7}
}

func (m *Subnet4Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet4Request.Unmarshal(m, b)
}
func (m *Subnet4Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet4Request.Marshal(b, m, deterministic)
}
func (m *Subnet4Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet4Request.Merge(m, src)
}
func (m *Subnet4Request) XXX_Size() int {
	return xxx_messageInfo_Subnet4Request.Size(m)
}
func (m *Subnet4Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet4Request.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet4Request proto.InternalMessageInfo

func (m *Subnet4Request) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Subnet6Request struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subnet6Request) Reset()         { *m = Subnet6Request{} }
func (m *Subnet6Request) String() string { return proto.CompactTextString(m) }
func (*Subnet6Request) ProtoMessage()    {}
func (*Subnet6Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{8}
}

func (m *Subnet6Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet6Request.Unmarshal(m, b)
}
func (m *Subnet6Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet6Request.Marshal(b, m, deterministic)
}
func (m *Subnet6Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet6Request.Merge(m, src)
}
func (m *Subnet6Request) XXX_Size() int {
	return xxx_messageInfo_Subnet6Request.Size(m)
}
func (m *Subnet6Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet6Request.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet6Request proto.InternalMessageInfo

func (m *Subnet6Request) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	Error                string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	RegistryUpdateTime   int64      `protobuf:"varint,2,opt,name=registryUpdateTime,proto3" json:"registryUpdateTime,omitempty"`
	Results              []*Content `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{9}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SearchResponse) GetRegistryUpdateTime() int64 {
	if m != nil {
		return m.RegistryUpdateTime
	}
	return 0
}

func (m *SearchResponse) GetResults() []*Content {
	if m != nil {
		return m.Results
	}
	return nil
}

type StatRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatRequest) Reset()         { *m = StatRequest{} }
func (m *StatRequest) String() string { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()    {}
func (*StatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{10}
}

func (m *StatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatRequest.Unmarshal(m, b)
}
func (m *StatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatRequest.Marshal(b, m, deterministic)
}
func (m *StatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatRequest.Merge(m, src)
}
func (m *StatRequest) XXX_Size() int {
	return xxx_messageInfo_StatRequest.Size(m)
}
func (m *StatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatRequest proto.InternalMessageInfo

func (m *StatRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type StatResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Stats                []byte   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatResponse) Reset()         { *m = StatResponse{} }
func (m *StatResponse) String() string { return proto.CompactTextString(m) }
func (*StatResponse) ProtoMessage()    {}
func (*StatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{11}
}

func (m *StatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatResponse.Unmarshal(m, b)
}
func (m *StatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatResponse.Marshal(b, m, deterministic)
}
func (m *StatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatResponse.Merge(m, src)
}
func (m *StatResponse) XXX_Size() int {
	return xxx_messageInfo_StatResponse.Size(m)
}
func (m *StatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatResponse proto.InternalMessageInfo

func (m *StatResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *StatResponse) GetStats() []byte {
	if m != nil {
		return m.Stats
	}
	return nil
}

type PingRequest struct {
	Ping                 string   `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{12}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

type PongResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	RegistryUpdateTime   int64    `protobuf:"varint,2,opt,name=registryUpdateTime,proto3" json:"registryUpdateTime,omitempty"`
	Pong                 string   `protobuf:"bytes,3,opt,name=pong,proto3" json:"pong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongResponse) Reset()         { *m = PongResponse{} }
func (m *PongResponse) String() string { return proto.CompactTextString(m) }
func (*PongResponse) ProtoMessage()    {}
func (*PongResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{13}
}

func (m *PongResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongResponse.Unmarshal(m, b)
}
func (m *PongResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongResponse.Marshal(b, m, deterministic)
}
func (m *PongResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongResponse.Merge(m, src)
}
func (m *PongResponse) XXX_Size() int {
	return xxx_messageInfo_PongResponse.Size(m)
}
func (m *PongResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PongResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PongResponse proto.InternalMessageInfo

func (m *PongResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *PongResponse) GetRegistryUpdateTime() int64 {
	if m != nil {
		return m.RegistryUpdateTime
	}
	return 0
}

func (m *PongResponse) GetPong() string {
	if m != nil {
		return m.Pong
	}
	return ""
}

type Content struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegistryUpdateTime   int64    `protobuf:"varint,2,opt,name=registryUpdateTime,proto3" json:"registryUpdateTime,omitempty"`
	BlockType            int32    `protobuf:"varint,3,opt,name=blockType,proto3" json:"blockType,omitempty"`
	Ip4                  uint32   `protobuf:"varint,4,opt,name=ip4,proto3" json:"ip4,omitempty"`
	Ip6                  []byte   `protobuf:"bytes,5,opt,name=ip6,proto3" json:"ip6,omitempty"`
	Domain               string   `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`
	Url                  string   `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Aggr                 string   `protobuf:"bytes,8,opt,name=aggr,proto3" json:"aggr,omitempty"`
	Pack                 []byte   `protobuf:"bytes,9,opt,name=pack,proto3" json:"pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{14}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Content) GetRegistryUpdateTime() int64 {
	if m != nil {
		return m.RegistryUpdateTime
	}
	return 0
}

func (m *Content) GetBlockType() int32 {
	if m != nil {
		return m.BlockType
	}
	return 0
}

func (m *Content) GetIp4() uint32 {
	if m != nil {
		return m.Ip4
	}
	return 0
}

func (m *Content) GetIp6() []byte {
	if m != nil {
		return m.Ip6
	}
	return nil
}

func (m *Content) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Content) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Content) GetAggr() string {
	if m != nil {
		return m.Aggr
	}
	return ""
}

func (m *Content) GetPack() []byte {
	if m != nil {
		return m.Pack
	}
	return nil
}

func init() {
	proto.RegisterType((*IDRequest)(nil), "IDRequest")
	proto.RegisterType((*IP4Request)(nil), "IP4Request")
	proto.RegisterType((*IP6Request)(nil), "IP6Request")
	proto.RegisterType((*URLRequest)(nil), "URLRequest")
	proto.RegisterType((*DomainRequest)(nil), "DomainRequest")
	proto.RegisterType((*DecisionRequest)(nil), "DecisionRequest")
	proto.RegisterType((*TextDecisionRequest)(nil), "TextDecisionRequest")
	proto.RegisterType((*Subnet4Request)(nil), "Subnet4Request")
	proto.RegisterType((*Subnet6Request)(nil), "Subnet6Request")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
	proto.RegisterType((*StatRequest)(nil), "StatRequest")
	proto.RegisterType((*StatResponse)(nil), "StatResponse")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PongResponse)(nil), "PongResponse")
	proto.RegisterType((*Content)(nil), "Content")
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor_c06e4cca6c2cc899) }

var fileDescriptor_c06e4cca6c2cc899 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x8e, 0xda, 0x30,
	0x10, 0x80, 0x05, 0x24, 0x40, 0x86, 0x00, 0x2b, 0x17, 0x55, 0x11, 0xea, 0x81, 0x0d, 0x6a, 0x97,
	0xaa, 0x92, 0xab, 0xee, 0xa2, 0x1c, 0xda, 0xe3, 0x72, 0x41, 0xda, 0x03, 0x0a, 0xf0, 0x00, 0x01,
	0xac, 0x10, 0x01, 0x71, 0xd6, 0x36, 0x52, 0xe9, 0xb9, 0xaf, 0xd9, 0x77, 0xa9, 0x6c, 0x27, 0xfc,
	0x2c, 0x69, 0xb6, 0x95, 0x7a, 0x1b, 0x4f, 0xbe, 0xb1, 0x3d, 0xd6, 0x7c, 0x01, 0x6b, 0xc7, 0x43,
	0x9c, 0x30, 0x2a, 0xa8, 0x7b, 0x0b, 0xd6, 0x78, 0xe4, 0x93, 0xe7, 0x3d, 0xe1, 0x02, 0x75, 0xc0,
	0x7c, 0xde, 0x13, 0x76, 0x70, 0x4a, 0xbd, 0xd2, 0xc0, 0xf4, 0xf5, 0xc2, 0x75, 0x01, 0xc6, 0x93,
	0x61, 0x2e, 0xd3, 0xbc, 0x60, 0xbc, 0x5c, 0xc6, 0x3e, 0x63, 0xe6, 0xfe, 0x53, 0x2e, 0x63, 0x65,
	0xcc, 0x7b, 0x68, 0x8e, 0xe8, 0x2e, 0x88, 0xe2, 0x62, 0xec, 0x0e, 0xda, 0x23, 0xb2, 0x8c, 0x78,
	0x44, 0xf3, 0x41, 0x23, 0x03, 0x3f, 0xc1, 0x9b, 0x19, 0xf9, 0x2e, 0x0a, 0xe1, 0xe3, 0xae, 0x1f,
	0xa0, 0x35, 0xdd, 0x2f, 0x62, 0x22, 0x86, 0x7f, 0xc9, 0x79, 0xc5, 0xdc, 0x0f, 0x68, 0x4d, 0x49,
	0xc0, 0x96, 0x6b, 0x9f, 0xf0, 0x84, 0xc6, 0x9c, 0x48, 0x8e, 0x30, 0x46, 0x59, 0xc6, 0xa9, 0x05,
	0xc2, 0x80, 0x18, 0x09, 0x23, 0x2e, 0xd8, 0x61, 0x9e, 0xac, 0x02, 0x41, 0x66, 0xd1, 0x8e, 0x38,
	0xe5, 0x5e, 0x69, 0x50, 0xf1, 0x73, 0xbe, 0x20, 0x17, 0x6a, 0x8c, 0xf0, 0xfd, 0x56, 0x70, 0xa7,
	0xd2, 0xab, 0x0c, 0x1a, 0xf7, 0x75, 0xfc, 0x48, 0x63, 0x41, 0x62, 0xe1, 0x67, 0x1f, 0xdc, 0x3e,
	0x34, 0xa6, 0x22, 0x10, 0xc5, 0x17, 0xfc, 0x0a, 0xb6, 0x86, 0x0a, 0xaf, 0xd7, 0x01, 0x93, 0x8b,
	0x40, 0x70, 0x75, 0x23, 0xdb, 0xd7, 0x0b, 0xf7, 0x16, 0x1a, 0x93, 0x28, 0x0e, 0xb3, 0x03, 0x10,
	0x18, 0x49, 0x14, 0x87, 0x69, 0xa5, 0x8a, 0xdd, 0x35, 0xd8, 0x13, 0x2a, 0x91, 0xff, 0xda, 0xbd,
	0x3c, 0x89, 0xc6, 0xa1, 0x53, 0x49, 0x4f, 0xa2, 0x71, 0xe8, 0xfe, 0x2a, 0x41, 0x2d, 0x7d, 0x02,
	0xd4, 0x82, 0x72, 0xb4, 0x4a, 0x27, 0xb8, 0x1c, 0xad, 0xfe, 0x79, 0xff, 0x77, 0x60, 0x2d, 0xb6,
	0x74, 0xb9, 0x99, 0x1d, 0x12, 0xa2, 0x0e, 0x31, 0xfd, 0x53, 0x02, 0xdd, 0x40, 0x25, 0x4a, 0x86,
	0x8e, 0xa1, 0x86, 0x5f, 0x86, 0x3a, 0xe3, 0x39, 0xa6, 0x7a, 0x1c, 0x19, 0xa2, 0xb7, 0x50, 0x5d,
	0xa9, 0x21, 0x76, 0xaa, 0xea, 0x8e, 0xe9, 0x4a, 0x92, 0x7b, 0xb6, 0x75, 0x6a, 0x2a, 0x29, 0x43,
	0xd9, 0x4b, 0x10, 0x86, 0xcc, 0xa9, 0xeb, 0x5e, 0x64, 0xac, 0xfa, 0x0b, 0x96, 0x1b, 0xc7, 0x52,
	0x1b, 0xaa, 0xf8, 0xfe, 0xa7, 0x01, 0xe6, 0xe3, 0x9a, 0x2c, 0x37, 0xe8, 0x0e, 0xea, 0x7a, 0xa6,
	0xc6, 0x23, 0x04, 0xf8, 0xa8, 0x6e, 0xb7, 0x8d, 0x5f, 0x8c, 0xda, 0x47, 0xb0, 0x52, 0x70, 0x32,
	0x44, 0x0d, 0x7c, 0x32, 0xb8, 0x10, 0xf5, 0x14, 0xea, 0xbd, 0x8e, 0xce, 0xfd, 0x27, 0xd4, 0xc0,
	0x27, 0x9f, 0xaf, 0xd1, 0xcf, 0x60, 0xeb, 0x8c, 0x16, 0x1a, 0xb5, 0xf0, 0x85, 0xd9, 0xd7, 0x05,
	0x0f, 0x99, 0x2e, 0x99, 0xad, 0xe8, 0x06, 0xbf, 0x10, 0xf7, 0xba, 0xe8, 0x1b, 0x20, 0x9d, 0x39,
	0xd7, 0x1c, 0x75, 0x70, 0x8e, 0xf5, 0xd7, 0xc5, 0x5f, 0xa0, 0xa9, 0x33, 0xa9, 0xf6, 0xa8, 0x8d,
	0x2f, 0x7f, 0x00, 0xaf, 0x96, 0x78, 0xc7, 0x92, 0x3f, 0xbf, 0x59, 0x1f, 0x0c, 0x69, 0x19, 0xb2,
	0xf1, 0x99, 0x91, 0xdd, 0x26, 0xbe, 0x50, 0xaf, 0x0f, 0x86, 0xd4, 0x09, 0xd9, 0xf8, 0xcc, 0xaa,
	0x6e, 0x13, 0x9f, 0x0b, 0xb4, 0xa8, 0xaa, 0x7f, 0xf6, 0xc3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x05, 0x69, 0xb5, 0xf9, 0xc0, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckClient is the client API for Check service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckClient interface {
	SearchID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchIP4(ctx context.Context, in *IP4Request, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchIP6(ctx context.Context, in *IP6Request, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchURL(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchDomain(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchDecision(ctx context.Context, in *DecisionRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchTextDecision(ctx context.Context, in *TextDecisionRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchSubnet4(ctx context.Context, in *Subnet4Request, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchSubnet6(ctx context.Context, in *Subnet6Request, opts ...grpc.CallOption) (*SearchResponse, error)
	Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error)
}

type checkClient struct {
	cc *grpc.ClientConn
}

func NewCheckClient(cc *grpc.ClientConn) CheckClient {
	return &checkClient{cc}
}

func (c *checkClient) SearchID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchIP4(ctx context.Context, in *IP4Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchIP4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchIP6(ctx context.Context, in *IP6Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchIP6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchURL(ctx context.Context, in *URLRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchDomain(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchDecision(ctx context.Context, in *DecisionRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchDecision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchTextDecision(ctx context.Context, in *TextDecisionRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchTextDecision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchSubnet4(ctx context.Context, in *Subnet4Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchSubnet4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) SearchSubnet6(ctx context.Context, in *Subnet6Request, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/Check/SearchSubnet6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := c.cc.Invoke(ctx, "/Check/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error) {
	out := new(PongResponse)
	err := c.cc.Invoke(ctx, "/Check/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckServer is the server API for Check service.
type CheckServer interface {
	SearchID(context.Context, *IDRequest) (*SearchResponse, error)
	SearchIP4(context.Context, *IP4Request) (*SearchResponse, error)
	SearchIP6(context.Context, *IP6Request) (*SearchResponse, error)
	SearchURL(context.Context, *URLRequest) (*SearchResponse, error)
	SearchDomain(context.Context, *DomainRequest) (*SearchResponse, error)
	SearchDecision(context.Context, *DecisionRequest) (*SearchResponse, error)
	SearchTextDecision(context.Context, *TextDecisionRequest) (*SearchResponse, error)
	SearchSubnet4(context.Context, *Subnet4Request) (*SearchResponse, error)
	SearchSubnet6(context.Context, *Subnet6Request) (*SearchResponse, error)
	Stat(context.Context, *StatRequest) (*StatResponse, error)
	Ping(context.Context, *PingRequest) (*PongResponse, error)
}

// UnimplementedCheckServer can be embedded to have forward compatible implementations.
type UnimplementedCheckServer struct {
}

func (*UnimplementedCheckServer) SearchID(ctx context.Context, req *IDRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchID not implemented")
}
func (*UnimplementedCheckServer) SearchIP4(ctx context.Context, req *IP4Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIP4 not implemented")
}
func (*UnimplementedCheckServer) SearchIP6(ctx context.Context, req *IP6Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIP6 not implemented")
}
func (*UnimplementedCheckServer) SearchURL(ctx context.Context, req *URLRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchURL not implemented")
}
func (*UnimplementedCheckServer) SearchDomain(ctx context.Context, req *DomainRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDomain not implemented")
}
func (*UnimplementedCheckServer) SearchDecision(ctx context.Context, req *DecisionRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDecision not implemented")
}
func (*UnimplementedCheckServer) SearchTextDecision(ctx context.Context, req *TextDecisionRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTextDecision not implemented")
}
func (*UnimplementedCheckServer) SearchSubnet4(ctx context.Context, req *Subnet4Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSubnet4 not implemented")
}
func (*UnimplementedCheckServer) SearchSubnet6(ctx context.Context, req *Subnet6Request) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSubnet6 not implemented")
}
func (*UnimplementedCheckServer) Stat(ctx context.Context, req *StatRequest) (*StatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stat not implemented")
}
func (*UnimplementedCheckServer) Ping(ctx context.Context, req *PingRequest) (*PongResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterCheckServer(s *grpc.Server, srv CheckServer) {
	s.RegisterService(&_Check_serviceDesc, srv)
}

func _Check_SearchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchID(ctx, req.(*IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchIP4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IP4Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchIP4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchIP4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchIP4(ctx, req.(*IP4Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchIP6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IP6Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchIP6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchIP6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchIP6(ctx, req.(*IP6Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchURL(ctx, req.(*URLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchDomain(ctx, req.(*DomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchDecision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecisionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchDecision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchDecision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchDecision(ctx, req.(*DecisionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchTextDecision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextDecisionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchTextDecision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchTextDecision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchTextDecision(ctx, req.(*TextDecisionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchSubnet4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subnet4Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchSubnet4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchSubnet4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchSubnet4(ctx, req.(*Subnet4Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_SearchSubnet6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subnet6Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).SearchSubnet6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/SearchSubnet6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).SearchSubnet6(ctx, req.(*Subnet6Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).Stat(ctx, req.(*StatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Check_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Check/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Check_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Check",
	HandlerType: (*CheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchID",
			Handler:    _Check_SearchID_Handler,
		},
		{
			MethodName: "SearchIP4",
			Handler:    _Check_SearchIP4_Handler,
		},
		{
			MethodName: "SearchIP6",
			Handler:    _Check_SearchIP6_Handler,
		},
		{
			MethodName: "SearchURL",
			Handler:    _Check_SearchURL_Handler,
		},
		{
			MethodName: "SearchDomain",
			Handler:    _Check_SearchDomain_Handler,
		},
		{
			MethodName: "SearchDecision",
			Handler:    _Check_SearchDecision_Handler,
		},
		{
			MethodName: "SearchTextDecision",
			Handler:    _Check_SearchTextDecision_Handler,
		},
		{
			MethodName: "SearchSubnet4",
			Handler:    _Check_SearchSubnet4_Handler,
		},
		{
			MethodName: "SearchSubnet6",
			Handler:    _Check_SearchSubnet6_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _Check_Stat_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Check_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg.proto",
}
